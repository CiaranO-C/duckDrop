// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  email     String  @unique
  password  String
  folders   Folder[]  
  files     File[]
  role      Role    @default(USER)

  @@map("users")
}

model Folder {
  id           Int        @id @default(autoincrement())
  owner        User       @relation(fields: [ownerId], references: [id]) 
  ownerId      Int        @map("user_id")
  title        String     @default("New Folder")
  parent       Folder?    @relation("folderHierarchy", fields: [parentId], references: [id])
  parentId     Int?       @map("parent_id") 
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime?  @map("updated_at")
  folders      Folder[]   @relation("folderHierarchy")
  files        File[]
  sizeBytes    Int        @default(0) @map("size_bytes") 
  isRoot       Boolean    @default(false) @map("root")

   @@map("folders")
}

model File {
  id          Int        @default(autoincrement())
  owner       User       @relation(fields: [ownerId], references: [id])
  ownerId     Int        @map("user_id")
  parent      Folder?    @relation(fields: [parentId], references: [id])
  parentId    Int?       @map("parent_id")
  title       String     @unique
  dataUrl     String     @map("data_url") @unique 
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime?  @map("updated_at")
  sizeBytes   Int        @map("size_bytes")

   @@map("files")
}


